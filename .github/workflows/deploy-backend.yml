name: Deploy Backend to Azure

on:
  push:
    branches: [ main ]
    paths:
      - "server/**"
      - ".github/workflows/deploy-backend.yml"

permissions:
  contents: read

# Prevent parallel deployments
concurrency:
  group: backend-deployment
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: server/package-lock.json

      - name: Install dependencies
        working-directory: server
        run: npm ci

      - name: Build application
        working-directory: server
        run: npm run build

      - name: Install production dependencies
        working-directory: server
        run: npm ci --omit=dev

      - name: Create deployment package
        working-directory: server
        run: |
          # Create a simple startup script
          cat > startup.sh << 'EOF'
          #!/bin/bash
          cd "$(dirname "$0")"
          echo "Starting application..."
          node dist/index.js
          EOF
          chmod +x startup.sh
          
          # Create deployment ZIP
          zip -r deployment.zip . -x "node_modules/.cache/*" "*.log" ".git/*"
          
          # Debug: Show what we created
          echo "=== DEPLOYMENT PACKAGE DEBUG ==="
          echo "Current directory: $(pwd)"
          echo "Files in current directory:"
          ls -la
          echo "ZIP file details:"
          ls -lah deployment.zip
          echo "ZIP contents:"
          unzip -l deployment.zip | head -20
          echo "Startup script contents:"
          cat startup.sh
          echo "Package.json contents:"
          cat package.json
          echo "Dist directory contents:"
          ls -la dist/

      - name: Pre-deployment debug
        run: |
          echo "=== PRE-DEPLOYMENT DEBUG ==="
          echo "Repository root contents:"
          ls -la
          echo "Server directory contents:"
          ls -la server/
          echo "ZIP file exists:"
          test -f server/deployment.zip && echo "✅ ZIP file found" || echo "❌ ZIP file missing"
          echo "ZIP file size:"
          ls -lah server/deployment.zip
          echo "ZIP file integrity:"
          unzip -t server/deployment.zip || echo "❌ ZIP file is corrupted"

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: SMARTTASK-AI
          slot-name: production
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_3648A7C097704B079741BF447BA6A912 }}
          package: server/deployment.zip

      - name: Post-deployment debug
        if: always()
        run: |
          echo "=== POST-DEPLOYMENT DEBUG ==="
          echo "Deployment step completed with status: ${{ job.status }}"
          echo "Current timestamp: $(date)"
          echo "Testing basic connectivity to Azure App Service..."
          curl -I --max-time 10 https://smarttask-ai-f6gzb6hgcrgngxhq.israelcentral-01.azurewebsites.net/ || echo "⚠️ App Service not responding"

      - name: Wait for deployment
        run: sleep 30

      - name: Health check
        run: |
          echo "Testing application health..."
          for i in {1..5}; do
            echo "Attempt $i/5"
            if curl -f -s --max-time 10 https://smarttask-ai-f6gzb6hgcrgngxhq.israelcentral-01.azurewebsites.net/health; then
              echo "✅ Application is healthy"
              exit 0
            else
              echo "⚠️ Health check failed, retrying in 10 seconds..."
              sleep 10
            fi
          done
          echo "❌ Health check failed after 5 attempts"
          exit 1
