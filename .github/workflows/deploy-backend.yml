name: Deploy Backend (App Service, gated by CI)

on:
  workflow_run:
    workflows: ["CI"]
    types: [completed]
    branches: [main]

permissions:
  contents: read

concurrency:
  group: smarttask-ai-prod
  cancel-in-progress: false

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}

      # --- Verify package.json exists ---
      - name: Verify package.json
        run: |
          test -f server/package.json || (echo "Missing server/package.json" && exit 1)
          echo "✅ package.json verified"

      # --- Ensure Oryx will build on Azure (source deployment only) ---
      - name: Ensure .deployment for Oryx build
        working-directory: server
        run: |
          echo "=== CONFIGURING FOR ORYX BUILD ==="
          # IMPORTANT: Do NOT set WEBSITE_RUN_FROM_PACKAGE anywhere
          echo "SCM_DO_BUILD_DURING_DEPLOYMENT=true" > .deployment
          echo "WEBSITE_NODE_DEFAULT_VERSION=20" >> .deployment
          # Linux App Service doesn't need web.config when using Oryx + npm start
          echo "✅ .deployment configured for Oryx build"

      # --- Azure Login ---
      - name: Azure Login
        uses: azure/login@v2
        with:
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_3648A7C097704B079741BF447BA6A912 }}

      # --- Stop App Service (release file locks) ---
      - name: Stop App Service
        run: |
          echo "=== STOPPING APP SERVICE ==="
          az webapp stop --name SMARTTASK-AI --resource-group smarttask-ai-rg
          echo "✅ App Service stopped"

      # --- Deploy to Azure Web App (source folder) ---
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: SMARTTASK-AI
          package: server
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_3648A7C097704B079741BF447BA6A912 }}

      # --- Start App Service ---
      - name: Start App Service
        if: always()
        run: |
          echo "=== STARTING APP SERVICE ==="
          az webapp start --name SMARTTASK-AI --resource-group smarttask-ai-rg
          echo "✅ App Service started"

      # --- Health check ---
      - name: Health check
        run: |
          echo "=== HEALTH CHECK ==="
          echo "Waiting for app to start..."
          sleep 30
          echo "Attempting health check..."
          curl -f https://smarttask-ai-f6gzb6hgcrgngxhq.israelcentral-01.azurewebsites.net/health || exit 1
          echo "✅ Health check passed"
